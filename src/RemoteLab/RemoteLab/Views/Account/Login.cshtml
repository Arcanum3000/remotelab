@using RemoteLab.Properties
@model RemoteLab.Models.LoginViewModel

@{
    ViewBag.Title = "Log in";
}

<h2>Log in.</h2>
<section id="loginForm">
    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div class="form-group">
            <label for="UserName" class="col-md-3 control-label">@RemoteLab.Properties.Settings.Default.LoginFormUsernameLabel</label>
                <div class="col-md-6">
                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", autofocus = "autofocus" })
                    @Html.ValidationMessageFor(m => m.UserName)
                </div>
        </div>
        <div class="form-group">
            <label for="Password" class="col-md-3 control-label">@RemoteLab.Properties.Settings.Default.LoginFormPasswordLabel</label>
                <div class="col-md-6">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Password)
                </div>
</div>
        <div class="form-group">
            <div class="col-md-offset-3 col-md-6">
                <button type="submit" value="Log In" class="btn btn-default"><i class="fa fa-lock"></i> Log In</button>
            </div>
        </div>
    }
</section>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}